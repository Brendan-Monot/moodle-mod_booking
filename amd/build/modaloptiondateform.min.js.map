{"version":3,"sources":["../src/modaloptiondateform.js"],"names":["addNotification","msg","console","log","init","linkSelector","formClass","resultSelector","addArgs","document","querySelector","addEventListener","e","preventDefault","form","ModalForm","args","hidebuttons","option","name","modalConfig","title","returnFocus","currentTarget","events","FORM_SUBMITTED","response","detail","innerHTML","JSON","stringify","LOADED","NOSUBMIT_BUTTON_PRESSED","getAttribute","CLIENT_VALIDATION_ERROR","SERVER_VALIDATION_ERROR","ERROR","message","SUBMIT_BUTTON_PRESSED","CANCEL_BUTTON_PRESSED","show"],"mappings":"qLAsBA,uD,GAGMA,CAAAA,CAAe,CAAG,SAAAC,CAAG,CAAI,CAC3B,UAASA,CAAT,EAEAC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CACH,C,QAGmB,QAAPG,CAAAA,IAAO,CAACC,CAAD,CAAeC,CAAf,CAA0BC,CAA1B,CAA8D,IAApBC,CAAAA,CAAoB,2DAC9EC,QAAQ,CAACC,aAAT,CAAuBL,CAAvB,EAAqCM,gBAArC,CAAsD,OAAtD,CAA+D,SAACC,CAAD,CAAO,CAClEA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,CAAI,CAAG,GAAIC,UAAJ,CAAc,CACvBT,SAAS,CAATA,CADuB,CAEvBU,IAAI,CAAER,CAAO,CAAG,CAACS,WAAW,CAAE,CAAd,CAAiBC,MAAM,CAAE,CAAC,OAAD,CAAU,QAAV,CAAzB,CAA8CC,IAAI,CAAE,OAApD,CAAH,CAAkE,CAACF,WAAW,CAAE,CAAd,CAFxD,CAGvBG,WAAW,CAAE,CAACC,KAAK,CAAE,OAAR,CAHU,CAIvBC,WAAW,CAAEV,CAAC,CAACW,aAJQ,CAAd,CAAb,CAOAT,CAAI,CAACH,gBAAL,CAAsBG,CAAI,CAACU,MAAL,CAAYC,cAAlC,CAAkD,SAACb,CAAD,CAAO,CACrD,GAAMc,CAAAA,CAAQ,CAAGd,CAAC,CAACe,MAAnB,CACA3B,CAAe,CAAC,mBAAD,CAAf,CACAS,QAAQ,CAACC,aAAT,CAAuBH,CAAvB,EAAuCqB,SAAvC,CAAmD,QAAUC,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAAV,CAAqC,QAC3F,CAJD,EAOAZ,CAAI,CAACH,gBAAL,CAAsBG,CAAI,CAACU,MAAL,CAAYO,MAAlC,CAA0C,iBAAM/B,CAAAA,CAAe,CAAC,aAAD,CAArB,CAA1C,EACAc,CAAI,CAACH,gBAAL,CAAsBG,CAAI,CAACU,MAAL,CAAYQ,uBAAlC,CACI,SAACpB,CAAD,QAAOZ,CAAAA,CAAe,CAAC,4BAA8BY,CAAC,CAACe,MAAF,CAASM,YAAT,CAAsB,MAAtB,CAA/B,CAAtB,CADJ,EAEAnB,CAAI,CAACH,gBAAL,CAAsBG,CAAI,CAACU,MAAL,CAAYU,uBAAlC,CAA2D,iBAAMlC,CAAAA,CAAe,CAAC,8BAAD,CAArB,CAA3D,EACAc,CAAI,CAACH,gBAAL,CAAsBG,CAAI,CAACU,MAAL,CAAYW,uBAAlC,CAA2D,iBAAMnC,CAAAA,CAAe,CAAC,8BAAD,CAArB,CAA3D,EACAc,CAAI,CAACH,gBAAL,CAAsBG,CAAI,CAACU,MAAL,CAAYY,KAAlC,CAAyC,SAACxB,CAAD,QAAOZ,CAAAA,CAAe,CAAC,YAAcY,CAAC,CAACe,MAAF,CAASU,OAAxB,CAAtB,CAAzC,EACAvB,CAAI,CAACH,gBAAL,CAAsBG,CAAI,CAACU,MAAL,CAAYc,qBAAlC,CAAyD,iBAAMtC,CAAAA,CAAe,CAAC,uBAAD,CAArB,CAAzD,EACAc,CAAI,CAACH,gBAAL,CAAsBG,CAAI,CAACU,MAAL,CAAYe,qBAAlC,CAAyD,iBAAMvC,CAAAA,CAAe,CAAC,uBAAD,CAArB,CAAzD,EAEAc,CAAI,CAAC0B,IAAL,EACH,CA1BD,CA4BH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Modal form to create specific option dates.\n *\n * @module     mod_booking\n * @copyright  2022 Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalForm from 'core_form/modalform';\nimport {add as addToast} from 'core/toast';\n\nconst addNotification = msg => {\n    addToast(msg);\n    // eslint-disable-next-line no-console\n    console.log(msg);\n};\n\n\nexport const init = (linkSelector, formClass, resultSelector, addArgs = false) => {\n    document.querySelector(linkSelector).addEventListener('click', (e) => {\n        e.preventDefault();\n        const form = new ModalForm({\n            formClass,\n            args: addArgs ? {hidebuttons: 1, option: ['green', 'yellow'], name: 'Test2'} : {hidebuttons: 1},\n            modalConfig: {title: 'Test2'},\n            returnFocus: e.currentTarget\n        });\n        // If necessary extend functionality by overriding class methods, for example:\n        form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n            const response = e.detail;\n            addNotification('Form submitted...');\n            document.querySelector(resultSelector).innerHTML = '<pre>' + JSON.stringify(response) + '</pre>';\n        });\n\n        // Demo of different events.\n        form.addEventListener(form.events.LOADED, () => addNotification('Form loaded'));\n        form.addEventListener(form.events.NOSUBMIT_BUTTON_PRESSED,\n            (e) => addNotification('No submit button pressed ' + e.detail.getAttribute('name')));\n        form.addEventListener(form.events.CLIENT_VALIDATION_ERROR, () => addNotification('Client-side validation error'));\n        form.addEventListener(form.events.SERVER_VALIDATION_ERROR, () => addNotification('Server-side validation error'));\n        form.addEventListener(form.events.ERROR, (e) => addNotification('Oopsie - ' + e.detail.message));\n        form.addEventListener(form.events.SUBMIT_BUTTON_PRESSED, () => addNotification('Submit button pressed'));\n        form.addEventListener(form.events.CANCEL_BUTTON_PRESSED, () => addNotification('Cancel button pressed'));\n\n        form.show();\n    });\n\n};\n"],"file":"modaloptiondateform.min.js"}