{"version":3,"sources":["../src/jquery.barrating.js"],"names":["factory","define","amd","$","BarRating","self","wrapElement","classes","options","theme","push","$elem","wrap","join","unwrapElement","unwrap","findOption","value","isNumeric","Math","floor","getInitialOption","initialRating","getEmptyOption","$emptyOpt","find","emptyValue","length","allowEmpty","prependTo","getData","key","data","setData","saveDataOnElement","$opt","val","text","emptyText","userOptions","ratingValue","ratingText","originalRatingValue","originalRatingText","emptyRatingValue","emptyRatingText","readOnly","readonly","ratingMade","removeDataOnElement","removeData","buildWidget","$w","each","html","$a","showValues","append","showSelectedRating","reverse","addClass","nextAllorPreviousAll","setSelectFieldValue","prop","triggerChange","change","resetSelectField","defaultSelected","parent","fraction","round","resetStyle","$widget","removeClass","index","match","applyStyle","baseValue","f","$all","$fractional","isDeselectable","$element","deselectable","attr","attachClickHandler","$elements","on","event","preventDefault","onSelect","call","attachMouseEnterHandler","attachMouseLeaveHandler","fastClicks","stopPropagation","click","disableClicks","attachHandlers","hoverState","detachHandlers","off","setupHandlers","show","insertAfter","hide","state","toggleClass","set","silent","clear","onClear","destroy","remove","onDestroy","prototype","init","elem","extend","fn","barrating","defaults","method","plugin","is","error","hasOwnProperty","next"],"mappings":"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","sourcesContent":["/* eslint-disable require-jsdoc */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * jQuery Bar Rating Plugin v1.2.2\n *\n * http://github.com/antennaio/jquery-bar-rating\n *\n * Copyright (c) 2012-2016 Kazik Pietruszewski\n *\n * This plugin is available under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n *\n * @param {any} factory factory\n */\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['jquery'], factory);\n    }\n}(function($) {\n\n    var BarRating = (function() {\n\n        /**\n         * BarRating function.\n         */\n        function BarRating() {\n            var self = this;\n\n            // Wrap element in a wrapper div\n            var wrapElement = function() {\n                var classes = ['br-wrapper'];\n\n                if (self.options.theme !== '') {\n                    classes.push('br-theme-' + self.options.theme);\n                }\n\n                self.$elem.wrap($('<div />', {\n                    'class': classes.join(' ')\n                }));\n            };\n\n            // Unwrap element\n            var unwrapElement = function() {\n                self.$elem.unwrap();\n            };\n\n            // Find option by value\n            var findOption = function(value) {\n                if ($.isNumeric(value)) {\n                    value = Math.floor(value);\n                }\n\n                return $('option[value=\"' + value + '\"]', self.$elem);\n            };\n\n            // Get initial option\n            var getInitialOption = function() {\n                var initialRating = self.options.initialRating;\n\n                if (!initialRating) {\n                    return $('option:selected', self.$elem);\n                }\n\n                return findOption(initialRating);\n            };\n\n            // Get empty option\n            var getEmptyOption = function() {\n                var $emptyOpt = self.$elem.find('option[value=\"' + self.options.emptyValue + '\"]');\n\n                if (!$emptyOpt.length && self.options.allowEmpty) {\n                    $emptyOpt = $('<option />', {'value': self.options.emptyValue});\n\n                    return $emptyOpt.prependTo(self.$elem);\n                }\n\n                return $emptyOpt;\n            };\n\n            // Get data\n            var getData = function(key) {\n                var data = self.$elem.data('barrating');\n\n                if (typeof key !== 'undefined') {\n                    return data[key];\n                }\n\n                return data;\n            };\n\n            // Set data\n            var setData = function(key, value) {\n                if (value !== null && typeof value === 'object') {\n                    self.$elem.data('barrating', value);\n                } else {\n                    self.$elem.data('barrating')[key] = value;\n                }\n            };\n\n            // Save data on element\n            var saveDataOnElement = function() {\n                var $opt = getInitialOption();\n                var $emptyOpt = getEmptyOption();\n\n                var value = $opt.val();\n                var text = $opt.data('html') ? $opt.data('html') : $opt.text();\n\n                // If the allowEmpty option is not set let's check if empty option exists in the select field\n                var allowEmpty = (self.options.allowEmpty !== null) ? self.options.allowEmpty : !!$emptyOpt.length;\n\n                var emptyValue = ($emptyOpt.length) ? $emptyOpt.val() : null;\n                var emptyText = ($emptyOpt.length) ? $emptyOpt.text() : null;\n\n                setData(null, {\n                    userOptions: self.options,\n\n                    // Initial rating based on the OPTION value\n                    ratingValue: value,\n                    ratingText: text,\n\n                    // Rating will be restored by calling clear method\n                    originalRatingValue: value,\n                    originalRatingText: text,\n\n                    // Allow empty ratings?\n                    allowEmpty: allowEmpty,\n\n                    // Rating value and text of the empty OPTION\n                    emptyRatingValue: emptyValue,\n                    emptyRatingText: emptyText,\n\n                    // Read-only state\n                    readOnly: self.options.readonly,\n\n                    // Did the user already select a rating?\n                    ratingMade: false\n                });\n            };\n\n            // Remove data on element\n            var removeDataOnElement = function() {\n                self.$elem.removeData('barrating');\n            };\n\n            // Return current rating text\n            var ratingText = function() {\n                return getData('ratingText');\n            };\n\n            // Return current rating value\n            var ratingValue = function() {\n                return getData('ratingValue');\n            };\n\n            // Build widget and return jQuery element\n            var buildWidget = function() {\n                var $w = $('<div />', {'class': 'br-widget'});\n\n                // Create A elements that will replace OPTIONs\n                self.$elem.find('option').each(function() {\n                    var val, text, html, $a;\n\n                    val = $(this).val();\n\n                    // Create ratings - but only if val is not defined as empty\n                    if (val !== getData('emptyRatingValue')) {\n                        text = $(this).text();\n                        html = $(this).data('html');\n                        if (html) {\n text = html;\n}\n\n                        $a = $('<a />', {\n                            'href': '#',\n                            'data-rating-value': val,\n                            'data-rating-text': text,\n                            'html': (self.options.showValues) ? text : ''\n                        });\n\n                        $w.append($a);\n                    }\n\n                });\n\n                // Append .br-current-rating div to the widget\n                if (self.options.showSelectedRating) {\n                    $w.append($('<div />', {'text': '', 'class': 'br-current-rating'}));\n                }\n\n                // Additional classes for the widget\n                if (self.options.reverse) {\n                    $w.addClass('br-reverse');\n                }\n\n                if (self.options.readonly) {\n                    $w.addClass('br-readonly');\n                }\n\n                return $w;\n            };\n\n            // Return a jQuery function name depending on the 'reverse' setting\n            var nextAllorPreviousAll = function() {\n                if (getData('userOptions').reverse) {\n                    return 'nextAll';\n                } else {\n                    return 'prevAll';\n                }\n            };\n\n            // Set the value of the select field\n            var setSelectFieldValue = function(value) {\n                // Change selected option\n                findOption(value).prop('selected', true);\n\n                if (getData('userOptions').triggerChange) {\n                    self.$elem.change();\n                }\n            };\n\n            // Reset select field\n            var resetSelectField = function() {\n                $('option', self.$elem).prop('selected', function() {\n                    return this.defaultSelected;\n                });\n\n                if (getData('userOptions').triggerChange) {\n                    self.$elem.change();\n                }\n            };\n\n            // Display the currently selected rating\n            var showSelectedRating = function(text) {\n                // Text undefined?\n                text = text ? text : ratingText();\n\n                // Special case when the selected rating is defined as empty\n                if (text == getData('emptyRatingText')) {\n                    text = '';\n                }\n\n                // Update .br-current-rating div\n                if (self.options.showSelectedRating) {\n                    self.$elem.parent().find('.br-current-rating').text(text);\n                }\n            };\n\n            // Return rounded fraction of a value (14.4 -> 40, 0.99 -> 90)\n            var fraction = function(value) {\n                return Math.round(((Math.floor(value * 10) / 10) % 1) * 100);\n            };\n\n            // Remove all classes from elements\n            var resetStyle = function() {\n                // Remove all classes starting with br-*\n                self.$widget.find('a').removeClass(function(index, classes) {\n                    return (classes.match(/(^|\\s)br-\\S+/g) || []).join(' ');\n                });\n            };\n\n            // Apply style by setting classes on elements\n            var applyStyle = function() {\n                var $a = self.$widget.find('a[data-rating-value=\"' + ratingValue() + '\"]');\n                var initialRating = getData('userOptions').initialRating;\n                var baseValue = $.isNumeric(ratingValue()) ? ratingValue() : 0;\n                var f = fraction(initialRating);\n                var $all, $fractional;\n\n                resetStyle();\n\n                // Add classes\n                $a.addClass('br-selected br-current')[nextAllorPreviousAll()]()\n                    .addClass('br-selected');\n\n                if (!getData('ratingMade') && $.isNumeric(initialRating)) {\n                    if ((initialRating <= baseValue) || !f) {\n                        return;\n                    }\n\n                    $all = self.$widget.find('a');\n\n                    if ($a.length) {\n                        $fractional = $a[(getData('userOptions').reverse) ? 'prev' : 'next']();\n                    } else {\n                        $fractional = $all[(getData('userOptions').reverse) ? 'last' : 'first']();\n                    }\n\n                    $fractional.addClass('br-fractional');\n                    $fractional.addClass('br-fractional-' + f);\n                }\n            };\n\n            // Check if the element is deselectable?\n            var isDeselectable = function($element) {\n                if (!getData('allowEmpty') || !getData('userOptions').deselectable) {\n                    return false;\n                }\n\n                return (ratingValue() == $element.attr('data-rating-value'));\n            };\n\n            // Handle click events\n            var attachClickHandler = function($elements) {\n                $elements.on('click.barrating', function(event) {\n                    var $a = $(this),\n                        options = getData('userOptions'),\n                        value,\n                        text;\n\n                    event.preventDefault();\n\n                    value = $a.attr('data-rating-value');\n                    text = $a.attr('data-rating-text');\n\n                    // Is current and deselectable?\n                    if (isDeselectable($a)) {\n                        value = getData('emptyRatingValue');\n                        text = getData('emptyRatingText');\n                    }\n\n                    // Remember selected rating\n                    setData('ratingValue', value);\n                    setData('ratingText', text);\n                    setData('ratingMade', true);\n\n                    setSelectFieldValue(value);\n                    showSelectedRating(text);\n\n                    applyStyle();\n\n                    // OnSelect callback\n                    options.onSelect.call(\n                        self,\n                        ratingValue(),\n                        ratingText(),\n                        event\n                    );\n\n                    return false;\n                });\n            };\n\n            // Handle mouseenter events\n            var attachMouseEnterHandler = function($elements) {\n                $elements.on('mouseenter.barrating', function() {\n                    if (!self.options.initialRating) {\n                        var $a = $(this);\n                        resetStyle();\n                        $a.addClass('br-active')[nextAllorPreviousAll()]()\n                            .addClass('br-active');\n                        showSelectedRating($a.attr('data-rating-text'));\n                    }\n                });\n            };\n\n            // Handle mouseleave events\n            var attachMouseLeaveHandler = function() {\n                self.$widget.on('mouseleave.barrating blur.barrating', function() {\n                    showSelectedRating();\n                    applyStyle();\n                });\n            };\n\n            // Somewhat primitive way to remove 300ms click delay on touch devices\n            // for a more advanced solution consider setting `fastClicks` option to false\n            // and using a library such as fastclick (https://github.com/ftlabs/fastclick)\n            var fastClicks = function($elements) {\n                $elements.on('touchstart.barrating', function(event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    $(this).click();\n                });\n            };\n\n            // Disable clicks\n            var disableClicks = function($elements) {\n                $elements.on('click.barrating', function(event) {\n                    event.preventDefault();\n                });\n            };\n\n            var attachHandlers = function($elements) {\n                // Attach click event handler\n                attachClickHandler($elements);\n\n                if (self.options.hoverState) {\n                    // Attach mouseenter event handler\n                    attachMouseEnterHandler($elements);\n\n                    // Attach mouseleave event handler\n                    attachMouseLeaveHandler($elements);\n                }\n            };\n\n            var detachHandlers = function($elements) {\n                // Remove event handlers in the \".barrating\" namespace\n                $elements.off('.barrating');\n            };\n\n            var setupHandlers = function(readonly) {\n                var $elements = self.$widget.find('a');\n\n                if (getData('userOptions').fastClicks) {\n                    fastClicks($elements);\n                }\n\n                if (readonly) {\n                    detachHandlers($elements);\n                    disableClicks($elements);\n                } else {\n                    attachHandlers($elements);\n                }\n            };\n\n            this.show = function() {\n                // Run only once\n                if (getData()) {\n                    return;\n                }\n\n                // Wrap element\n                wrapElement();\n\n                // Save data\n                saveDataOnElement();\n\n                // Build & append widget to the DOM\n                self.$widget = buildWidget();\n                self.$widget.insertAfter(self.$elem);\n\n                applyStyle();\n\n                showSelectedRating();\n\n                setupHandlers(self.options.readonly);\n\n                // Hide the select field\n                self.$elem.hide();\n            };\n\n            this.readonly = function(state) {\n                if (typeof state !== 'boolean' || getData('readOnly') == state) {\n                    return;\n                }\n\n                setupHandlers(state);\n                setData('readOnly', state);\n                self.$widget.toggleClass('br-readonly');\n            };\n\n            this.set = function(value) {\n                var options = getData('userOptions');\n\n                if (self.$elem.find('option[value=\"' + value + '\"]').length === 0) {\n                    return;\n                }\n\n                // Set data\n                setData('ratingValue', value);\n                setData('ratingText', self.$elem.find('option[value=\"' + value + '\"]').text());\n                setData('ratingMade', true);\n\n                setSelectFieldValue(ratingValue());\n                showSelectedRating(ratingText());\n\n                applyStyle();\n\n                // OnSelect callback\n                if (!options.silent) {\n                    options.onSelect.call(\n                        this,\n                        ratingValue(),\n                        ratingText()\n                    );\n                }\n            };\n\n            this.clear = function() {\n                var options = getData('userOptions');\n\n                // Restore original data\n                setData('ratingValue', getData('originalRatingValue'));\n                setData('ratingText', getData('originalRatingText'));\n                setData('ratingMade', false);\n\n                resetSelectField();\n                showSelectedRating(ratingText());\n\n                applyStyle();\n\n                // OnClear callback\n                options.onClear.call(\n                    this,\n                    ratingValue(),\n                    ratingText()\n                );\n            };\n\n            this.destroy = function() {\n                var value = ratingValue();\n                var text = ratingText();\n                var options = getData('userOptions');\n\n                // Detach handlers\n                detachHandlers(self.$widget.find('a'));\n\n                // Remove widget\n                self.$widget.remove();\n\n                // Remove data\n                removeDataOnElement();\n\n                // Unwrap the element\n                unwrapElement();\n\n                // Show the element\n                self.$elem.show();\n\n                // OnDestroy callback\n                options.onDestroy.call(\n                    this,\n                    value,\n                    text\n                );\n            };\n        }\n\n        BarRating.prototype.init = function(options, elem) {\n            this.$elem = $(elem);\n            this.options = $.extend({}, $.fn.barrating.defaults, options);\n\n            return this.options;\n        };\n\n        return BarRating;\n    })();\n\n    $.fn.barrating = function(method, options) {\n        // eslint-disable-next-line consistent-return\n        return this.each(function() {\n            var plugin = new BarRating();\n\n            // Plugin works with select fields\n            if (!$(this).is('select')) {\n                $.error('Sorry, this plugin only works with select fields.');\n            }\n\n            // Method supplied\n            if (plugin.hasOwnProperty(method)) {\n                plugin.init(options, this);\n                if (method === 'show') {\n                    return plugin.show(options);\n                } else {\n                    // Plugin exists?\n                    if (plugin.$elem.data('barrating')) {\n                        plugin.$widget = $(this).next('.br-widget');\n                        return plugin[method](options);\n                    }\n                }\n\n                // No method supplied or only options supplied\n            } else if (typeof method === 'object' || !method) {\n                options = method;\n                plugin.init(options, this);\n                return plugin.show();\n            } else {\n                $.error('Method ' + method + ' does not exist on jQuery.barrating');\n            }\n        });\n    };\n\n    $.fn.barrating.defaults = {\n        theme: '',\n        initialRating: null, // Initial rating\n        allowEmpty: null, // Allow empty ratings?\n        emptyValue: '', // This is the expected value of the empty rating\n        showValues: false, // Display rating values on the bars?\n        showSelectedRating: true, // Append a div with a rating to the widget?\n        deselectable: true, // Allow to deselect ratings?\n        reverse: false, // Reverse the rating?\n        readonly: false, // Make the rating ready-only?\n        fastClicks: true, // Remove 300ms click delay on touch devices?\n        hoverState: true, // Change state on hover?\n        silent: false, // Supress callbacks when controlling ratings programatically\n        triggerChange: true, // Trigger change event when ratings are set or reset\n        onSelect: function(value, text, event) {\n            value = text;\n            value = event;\n        }, // Callback fired when a rating is selected\n        onClear: function(value, text) {\n            value = text;\n        }, // Callback fired when a rating is cleared\n        onDestroy: function(value, text) {\n            value = text;\n        } // Callback fired when a widget is destroyed\n    };\n\n    $.fn.barrating.BarRating = BarRating;\n\n}));\n"],"file":"jquery.barrating.min.js"}