{"version":3,"file":"prepageFooter.min.js","sources":["../src/prepageFooter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/prepageFooter\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\nimport {continueToNextPage, backToPreviousPage} from 'mod_booking/bookit';\n\nvar SELECTORS = {\n    MODALID: 'sbPrePageModal_',\n    INMODALDIV: ' div.pageContent',\n    INMODALFOOTER: ' div.prepage-booking-footer',\n    INMODALBUTTON: 'div.in-modal-button',\n    BOOKITBUTTON: 'div.booking-button-area',\n};\n\nconst WAITTIME = 1500;\n\n/**\n * Add the click listener to a prepage modal button.\n * @param {integer} optionid\n */\nexport function initFooterButtons(optionid) {\n\n    initBookingButton(optionid);\n\n    // First, get all link elements in the footer.\n    const elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID + optionid + \"] \" + SELECTORS.INMODALFOOTER + \" a\");\n\n    elements.forEach(element => {\n        if (element && !element.dataset.initialized) {\n\n            // Make sure we dont initialize this twice.\n            element.dataset.initialized = true;\n\n            element.addEventListener('click', () => {\n\n                if (element.classList.contains('hidden')) {\n                    return;\n                }\n\n                // The logic might be blocked because eg a form is there to prevent it.\n                if (element.dataset.blocked == 'true') {\n                    return;\n                }\n\n                const action = element.dataset.action;\n\n                switch (action) {\n                    case 'back':\n                        backToPreviousPage(optionid);\n                    break;\n                    case 'continue':\n                        continueToNextPage(optionid);\n                    break;\n                    case 'checkout':\n                        window.location.href = element.dataset.href;\n                    break;\n                }\n            });\n        }\n    });\n}\n\n/**\n *\n * @param {int} optionid\n */\nasync function initBookingButton(optionid) {\n\n    // First, we get the right modal.\n    let modal = document.querySelector(\"[id^=\" + SELECTORS.MODALID + optionid + \"]\");\n\n    if (!modal) {\n        return;\n    }\n\n    // Within the modal, we only want to add the listener on the bookit button with option area.\n    const selector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid]' +\n    '[data-area=\"option\"]';\n\n    const button = modal.querySelector(selector);\n\n    if (!button) {\n        return;\n    }\n\n    button.addEventListener('click', () => {\n\n        // We don't continue right away but wait for a second.\n        setTimeout(() => {\n            continueToNextPage(optionid);\n        }, WAITTIME);\n    });\n}"],"names":["optionid","modal","document","querySelector","SELECTORS","selector","button","addEventListener","setTimeout","initBookingButton","querySelectorAll","forEach","element","dataset","initialized","classList","contains","blocked","action","window","location","href"],"mappings":"4LAsCkCA,0BA8CDA,cAGzBC,MAAQC,SAASC,cAAc,QAAUC,kBAAoBJ,SAAW,SAEvEC,mBAKCI,SAAWD,uBAAAA,oCAIXE,OAASL,MAAME,cAAcE,cAE9BC,cAILA,OAAOC,iBAAiB,SAAS,KAG7BC,YAAW,oCACYR,YA5Ed,SAQbS,CAAkBT,UAGDE,SAASQ,iBAAiB,QAAUN,kBAAoBJ,SAAW,KAAOI,wBAA0B,MAE5GO,SAAQC,UACTA,UAAYA,QAAQC,QAAQC,cAG5BF,QAAQC,QAAQC,aAAc,EAE9BF,QAAQL,iBAAiB,SAAS,QAE1BK,QAAQG,UAAUC,SAAS,oBAKA,QAA3BJ,QAAQC,QAAQI,sBAILL,QAAQC,QAAQK,YAGtB,sCACkBlB,oBAElB,0CACkBA,oBAElB,WACDmB,OAAOC,SAASC,KAAOT,QAAQC,QAAQQ;;;;;;IAhD3DjB,kBACS,kBADTA,wBAGe,8BAHfA,uBAKc"}