{"version":3,"file":"prepageFooter.min.js","sources":["../src/prepageFooter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/prepageFooter\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\nimport {continueToNextPage, backToPreviousPage} from 'mod_booking/bookit';\n\nvar SELECTORS = {\n    MODALID: 'sbPrePageModal_',\n    INMODALDIV: ' div.pageContent',\n    INMODALFOOTER: ' div.prepage-booking-footer',\n    INMODALBUTTON: 'div.in-modal-button',\n};\n\n/**\n * Add the click listener to a prepage modal button.\n * @param {integer} optionid\n */\nexport function initFooterButtons(optionid) {\n\n    // First, get all link elements in the footer.\n    const elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID + optionid + \"] \" + SELECTORS.INMODALFOOTER + \" a\");\n\n    // eslint-disable-next-line no-console\n    console.log(\"[id^=\" + SELECTORS.MODALID + optionid + \"] \" + SELECTORS.INMODALFOOTER + \" a\", elements);\n\n    elements.forEach(element => {\n        if (element && !element.dataset.initialized) {\n\n            // Make sure we dont initialize this twice.\n            element.dataset.initialized = true;\n\n            element.addEventListener('click', () => {\n\n                // eslint-disable-next-line no-console\n                console.log('click');\n\n                if (element.classList.contains('hidden')) {\n                    return;\n                }\n\n                // The logic might be blocked because eg a form is there to prevent it.\n                if (element.dataset.blocked == 'true') {\n                    return;\n                }\n\n                const action = element.dataset.action;\n\n                switch (action) {\n                    case 'back':\n                        backToPreviousPage(optionid);\n                    break;\n                    case 'continue':\n                        continueToNextPage(optionid);\n                    break;\n                    case 'checkout':\n                        window.location.href = element.dataset.href;\n                    break;\n                }\n            });\n        }\n    });\n}\n"],"names":["optionid","elements","document","querySelectorAll","SELECTORS","console","log","forEach","element","dataset","initialized","addEventListener","classList","contains","blocked","action","window","location","href"],"mappings":"4LAmCkCA,gBAGxBC,SAAWC,SAASC,iBAAiB,QAAUC,kBAAoBJ,SAAW,KAAOI,wBAA0B,MAGrHC,QAAQC,IAAI,QAAUF,kBAAoBJ,SAAW,KAAOI,wBAA0B,KAAMH,UAE5FA,SAASM,SAAQC,UACTA,UAAYA,QAAQC,QAAQC,cAG5BF,QAAQC,QAAQC,aAAc,EAE9BF,QAAQG,iBAAiB,SAAS,QAG9BN,QAAQC,IAAI,SAERE,QAAQI,UAAUC,SAAS,oBAKA,QAA3BL,QAAQC,QAAQK,sBAILN,QAAQC,QAAQM,YAGtB,sCACkBf,oBAElB,0CACkBA,oBAElB,WACDgB,OAAOC,SAASC,KAAOV,QAAQC,QAAQS;;;;;;IAjD3Dd,kBACS,kBADTA,wBAGe"}