{"version":3,"file":"prepageFooter.min.js","sources":["../src/prepageFooter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/prepageFooter\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\nimport {continueToNextPage, backToPreviousPage} from 'mod_booking/bookit';\n\nvar SELECTORS = {\n    MODALID: 'sbPrePageModal_',\n    INMODALDIV: ' div.pageContent',\n    INMODALFOOTER: ' div.prepage-booking-footer',\n    INMODALBUTTON: 'div.in-modal-button',\n    BOOKITBUTTON: 'div.booking-button-area',\n    STATICBACKDROP: 'div.modal-backdrop',\n};\n\nconst WAITTIME = 1500;\n\n/**\n * Add the click listener to a prepage modal button.\n * @param {integer} optionid\n */\nexport function initFooterButtons(optionid) {\n\n    initBookingButton(optionid);\n\n    // First, get all link elements in the footer.\n    const elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID + optionid + \"] \" + SELECTORS.INMODALFOOTER + \" a\");\n\n    elements.forEach(element => {\n        if (element && !element.dataset.initialized) {\n\n            // Make sure we dont initialize this twice.\n            element.dataset.initialized = true;\n\n            element.addEventListener('click', () => {\n\n                if (element.classList.contains('hidden')) {\n                    return;\n                }\n\n                // The logic might be blocked because eg a form is there to prevent it.\n                if (element.dataset.blocked == 'true') {\n                    return;\n                }\n\n                const action = element.dataset.action;\n\n                switch (action) {\n                    case 'back':\n                        backToPreviousPage(optionid);\n                    break;\n                    case 'continue':\n                        continueToNextPage(optionid);\n                    break;\n                    case 'checkout':\n                        closeModal(optionid);\n                        window.location.href = element.dataset.href;\n                    break;\n                    case 'closemodal':\n                        closeModal(optionid);\n                    break;\n                }\n            });\n        }\n    });\n}\n\n/**\n *\n * @param {int} optionid\n */\nasync function initBookingButton(optionid) {\n\n    // eslint-disable-next-line no-console\n    console.log('initBookingButton');\n\n    // First, we get the right modal.\n    let modal = document.querySelector(\"div.modal.show[id^=\" + SELECTORS.MODALID + optionid + \"]\");\n\n\n    if (!modal) {\n        return;\n    }\n\n    // Within the modal, we only want to add the listener on the bookit button with option area.\n    const selector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid]' +\n    '[data-area=\"option\"]';\n\n    let button = modal.querySelector(selector);\n\n    if ((button.dataset.action == 'noforward') || (!button)) {\n        return;\n    }\n\n    // When there is the shopping-cart button, we want to go lower.\n    button = button.querySelector('.wb_shopping_cart') ?? button;\n\n    // eslint-disable-next-line no-console\n    console.log(selector, button);\n\n    button.addEventListener('click', () => {\n\n        // eslint-disable-next-line no-console\n        console.log('initBookingButton click');\n\n        // We don't continue right away but wait for a second.\n        setTimeout(() => {\n            continueToNextPage(optionid);\n        }, WAITTIME);\n    });\n}\n\n/**\n *\n * @param {int} optionid\n */\nfunction closeModal(optionid) {\n    const backdrop = document.querySelector(SELECTORS.STATICBACKDROP);\n    const modal = document.querySelector(\"div.modal.show[id^=\" + SELECTORS.MODALID + optionid + \"]\");\n    if (modal) {\n        modal.classList.remove('show');\n    }\n    if (backdrop) {\n        backdrop.remove();\n    }\n}"],"names":["optionid","console","log","modal","document","querySelector","SELECTORS","selector","button","dataset","action","addEventListener","setTimeout","initBookingButton","querySelectorAll","forEach","element","initialized","classList","contains","blocked","closeModal","window","location","href","backdrop","remove"],"mappings":"4LAuCkCA,0BAkDDA,oCAG7BC,QAAQC,IAAI,yBAGRC,MAAQC,SAASC,cAAc,sBAAwBC,kBAAoBN,SAAW,SAGrFG,mBAKCI,SAAWD,uBAAAA,wCAIbE,OAASL,MAAME,cAAcE,aAEH,aAAzBC,OAAOC,QAAQC,SAA4BF,cAKhDA,qCAASA,OAAOH,cAAc,4EAAwBG,OAGtDP,QAAQC,IAAIK,SAAUC,QAEtBA,OAAOG,iBAAiB,SAAS,KAG7BV,QAAQC,IAAI,2BAGZU,YAAW,oCACYZ,YA7Fd,SAQba,CAAkBb,UAGDI,SAASU,iBAAiB,QAAUR,kBAAoBN,SAAW,KAAOM,wBAA0B,MAE5GS,SAAQC,UACTA,UAAYA,QAAQP,QAAQQ,cAG5BD,QAAQP,QAAQQ,aAAc,EAE9BD,QAAQL,iBAAiB,SAAS,QAE1BK,QAAQE,UAAUC,SAAS,oBAKA,QAA3BH,QAAQP,QAAQW,sBAILJ,QAAQP,QAAQC,YAGtB,sCACkBV,oBAElB,0CACkBA,oBAElB,WACDqB,WAAWrB,UACXsB,OAAOC,SAASC,KAAOR,QAAQP,QAAQe,eAEtC,aACDH,WAAWrB;;;;;;IArD/BM,kBACS,kBADTA,wBAGe,8BAHfA,uBAKc,0BALdA,yBAMgB,8BAyGXe,WAAWrB,gBACVyB,SAAWrB,SAASC,cAAcC,0BAClCH,MAAQC,SAASC,cAAc,sBAAwBC,kBAAoBN,SAAW,KACxFG,OACAA,MAAMe,UAAUQ,OAAO,QAEvBD,UACAA,SAASC"}