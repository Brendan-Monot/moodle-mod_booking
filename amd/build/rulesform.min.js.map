{"version":3,"file":"rulesform.min.js","sources":["../src/rulesform.js"],"sourcesContent":["/* eslint-disable promise/always-return */\n/* eslint-disable promise/catch-or-return */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_booking\n * @author     Bernhard Fischer\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Dynamic semesters form.\n *\n * @module     mod_booking/rulesform\n * @copyright  2022 Wunderbyte GmbH\n * @author     Georg MaiÃŸer\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport DynamicForm from 'core_form/dynamicform';\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\n\nexport const init = (formClass) => {\n\n    // eslint-disable-next-line no-console\n    console.log('init in rules form called', formClass);\n\n    const element = document.querySelector(\"[data-region='rulesform']\");\n    const formargs = {};\n\n    const form = new DynamicForm(element, formClass);\n\n    form.load();\n\n    // eslint-disable-next-line no-console\n    console.log('init', element, form);\n\n    form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n\n        const response = e.detail;\n        form.load(formargs, response);\n\n        getString('allchangessaved', 'mod_booking').then(message => {\n\n            Notification.addNotification({\n                message: message,\n                type: \"success\"\n            });\n\n            return;\n        }).catch(e => {\n            // eslint-disable-next-line no-console\n            console.log(e);\n        });\n    });\n\n    // Cancel button does not make much sense in such forms but since it's there we'll just reload.\n    form.addEventListener(form.events.FORM_CANCELLED, (e) => {\n        e.preventDefault();\n        form.notifyResetFormChanges()\n            .then(() => form.load(formargs));\n    });\n};\n"],"names":["formClass","console","log","element","document","querySelector","formargs","form","DynamicForm","load","addEventListener","events","FORM_SUBMITTED","e","preventDefault","response","detail","then","message","addNotification","type","catch","FORM_CANCELLED","notifyResetFormChanges"],"mappings":";;;;;;;;;;;;;;sMAoCqBA,YAGjBC,QAAQC,IAAI,4BAA6BF,iBAEnCG,QAAUC,SAASC,cAAc,6BACjCC,SAAW,GAEXC,KAAO,IAAIC,qBAAYL,QAASH,WAEtCO,KAAKE,OAGLR,QAAQC,IAAI,OAAQC,QAASI,MAE7BA,KAAKG,iBAAiBH,KAAKI,OAAOC,gBAAiBC,IAC/CA,EAAEC,uBAEIC,SAAWF,EAAEG,OACnBT,KAAKE,KAAKH,SAAUS,8BAEV,kBAAmB,eAAeE,MAAKC,gCAEhCC,gBAAgB,CACzBD,QAASA,QACTE,KAAM,eAIXC,OAAMR,IAELZ,QAAQC,IAAIW,SAKpBN,KAAKG,iBAAiBH,KAAKI,OAAOW,gBAAiBT,IAC/CA,EAAEC,iBACFP,KAAKgB,yBACAN,MAAK,IAAMV,KAAKE,KAAKH"}