{"version":3,"sources":["../src/dynamicsemestersform.js"],"names":["addNotification","msg","init","selector","formClass","form","DynamicForm","document","querySelector","formargs","arg1","addEventListener","events","FORM_SUBMITTED","e","preventDefault","response","detail","load","name","Notification","message","JSON","stringify","type","FORM_CANCELLED","notifyResetFormChanges","then","NOSUBMIT_BUTTON_PRESSED","CLIENT_VALIDATION_ERROR","SERVER_VALIDATION_ERROR","ERROR","SUBMIT_BUTTON_PRESSED","CANCEL_BUTTON_PRESSED"],"mappings":"8MA8BA,OACA,O,iwBAGMA,CAAAA,CAAe,CAAG,SAAAC,CAAG,CAAI,CAC3B,UAASA,CAAT,CACH,C,CAEYC,CAAI,CAAG,SAACC,CAAD,CAAWC,CAAX,CAAyB,IAEnCC,CAAAA,CAAI,CAAG,GAAIC,UAAJ,CAAgBC,QAAQ,CAACC,aAAT,CAAuBL,CAAvB,CAAhB,CAAkDC,CAAlD,CAF4B,CAGnCK,CAAQ,CAAG,CAACC,IAAI,CAAE,MAAP,CAHwB,CAKzCL,CAAI,CAACM,gBAAL,CAAsBN,CAAI,CAACO,MAAL,CAAYC,cAAlC,CAAkD,SAACC,CAAD,CAAO,CACrDA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,CAAQ,CAAGF,CAAC,CAACG,MAAnB,CACAZ,CAAI,CAACa,IAAL,MAAcT,CAAd,EAAwBU,IAAI,CAAEH,CAAQ,CAACG,IAAvC,IACAnB,CAAe,CAAC,iCAAD,CAAf,CACAoB,UAAapB,eAAb,CAA6B,CAACqB,OAAO,CAAE,mBAAqBC,IAAI,CAACC,SAAL,CAAeP,CAAf,CAA/B,CAAyDQ,IAAI,CAAE,SAA/D,CAA7B,CACH,CAND,EASAnB,CAAI,CAACM,gBAAL,CAAsBN,CAAI,CAACO,MAAL,CAAYa,cAAlC,CAAkD,SAACX,CAAD,CAAO,CACrDA,CAAC,CAACC,cAAF,GAEAV,CAAI,CAACqB,sBAAL,GACKC,IADL,CACU,iBAAMtB,CAAAA,CAAI,CAACa,IAAL,CAAUT,CAAV,CAAN,CADV,EAEAT,CAAe,CAAC,iCAAD,CAClB,CAND,EASAK,CAAI,CAACM,gBAAL,CAAsBN,CAAI,CAACO,MAAL,CAAYgB,uBAAlC,CAA2D,iBAAM5B,CAAAA,CAAe,CAAC,2BAAD,CAArB,CAA3D,EACAK,CAAI,CAACM,gBAAL,CAAsBN,CAAI,CAACO,MAAL,CAAYiB,uBAAlC,CAA2D,iBAAM7B,CAAAA,CAAe,CAAC,8BAAD,CAArB,CAA3D,EACAK,CAAI,CAACM,gBAAL,CAAsBN,CAAI,CAACO,MAAL,CAAYkB,uBAAlC,CAA2D,iBAAM9B,CAAAA,CAAe,CAAC,8BAAD,CAArB,CAA3D,EACAK,CAAI,CAACM,gBAAL,CAAsBN,CAAI,CAACO,MAAL,CAAYmB,KAAlC,CAAyC,SAACjB,CAAD,QAAOd,CAAAA,CAAe,CAAC,YAAcc,CAAC,CAACG,MAAF,CAASI,OAAxB,CAAtB,CAAzC,EACAhB,CAAI,CAACM,gBAAL,CAAsBN,CAAI,CAACO,MAAL,CAAYoB,qBAAlC,CAAyD,iBAAMhC,CAAAA,CAAe,CAAC,uBAAD,CAArB,CAAzD,EACAK,CAAI,CAACM,gBAAL,CAAsBN,CAAI,CAACO,MAAL,CAAYqB,qBAAlC,CAAyD,iBAAMjC,CAAAA,CAAe,CAAC,uBAAD,CAArB,CAAzD,CACH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    mod_booking\n * @author     Bernhard Fischer\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Dynamic semesters form.\n *\n * @module     mod_booking/dynamicsemestersform\n * @copyright  2022 Wunderbyte GmbH\n * @author     Bernhard Fischer\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport DynamicForm from 'core_form/dynamicform';\nimport Notification from 'core/notification';\nimport {add as addToast} from 'core/toast';\n\nconst addNotification = msg => {\n    addToast(msg);\n};\n\nexport const init = (selector, formClass) => {\n\n    const form = new DynamicForm(document.querySelector(selector), formClass);\n    const formargs = {arg1: 'val1'};\n\n    form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n        const response = e.detail;\n        form.load({...formargs, name: response.name});\n        addNotification('Form submitted (todo: localize)');\n        Notification.addNotification({message: 'Form submitted: ' + JSON.stringify(response), type: 'success'});\n    });\n\n    // Cancel button does not make much sense in such forms but since it's there we'll just reload.\n    form.addEventListener(form.events.FORM_CANCELLED, (e) => {\n        e.preventDefault();\n        // eslint-disable-next-line promise/catch-or-return\n        form.notifyResetFormChanges()\n            .then(() => form.load(formargs));\n        addNotification('Form cancelled (todo: localize)');\n    });\n\n    // Demo of different events.\n    form.addEventListener(form.events.NOSUBMIT_BUTTON_PRESSED, () => addNotification('No submit button pressed.'));\n    form.addEventListener(form.events.CLIENT_VALIDATION_ERROR, () => addNotification('Client-side validation error'));\n    form.addEventListener(form.events.SERVER_VALIDATION_ERROR, () => addNotification('Server-side validation error'));\n    form.addEventListener(form.events.ERROR, (e) => addNotification('Oopsie - ' + e.detail.message));\n    form.addEventListener(form.events.SUBMIT_BUTTON_PRESSED, () => addNotification('Submit button pressed'));\n    form.addEventListener(form.events.CANCEL_BUTTON_PRESSED, () => addNotification('Cancel button pressed'));\n};\n"],"file":"dynamicsemestersform.min.js"}