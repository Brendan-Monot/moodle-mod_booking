{"version":3,"file":"bookingPolicy.min.js","sources":["../../src/condition/bookingPolicy.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/condition/bookingPolicy\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\n\nconst SELECTOR = {\n    MODALID: 'sbPrePageModal_',\n    FORMCONTAINER: '.condition-bookingpolicy-form',\n    MODALBODY: '.modal-body',\n    CONTINUECONTAINER: ' div.prepage-booking-footer .continue-container',\n    CONTINUEBUTTON: ' div.prepage-booking-footer .continue-button',\n    BOOKINGBUTTON: '[data-area=\"subbooking\"][data-itemid=\"',\n};\n\n/**\n * Init function.\n */\nexport async function init() {\n\n    const container = document.querySelector(SELECTOR.FORMCONTAINER);\n    const id = container.dataset.id;\n\n    const dynamicForm = new DynamicForm(container, 'mod_booking\\\\form\\\\condition\\\\bookingpolicy_form');\n\n    // We need to render the dynamic form right away, so we can acutally have all the necessary elements present.\n    await dynamicForm.load({id: id});\n\n    let continuebutton = container.closest(SELECTOR.MODALBODY).querySelector(SELECTOR.CONTINUEBUTTON);\n\n    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, e => {\n        const response = e.detail;\n\n        if (response) {\n\n            // eslint-disable-next-line no-console\n            console.log('response', response);\n\n            // dynamicForm.load(response);\n\n            if (!continuebutton) {\n                continuebutton = container.closest(SELECTOR.MODALBODY).querySelector(SELECTOR.CONTINUEBUTTON);\n            }\n            if (continuebutton) {\n                continuebutton.dataset.blocked = 'false';\n                continuebutton.click();\n            }\n        }\n    });\n\n    const handler = () => {\n        // In this case, we can submit right away as soon as sth is changed.\n        dynamicForm.submitFormAjax();\n    };\n\n    dynamicForm.addEventListener('change', handler);\n\n    // This goes on continue button.\n    // It will prevent the action to be triggered.\n    // Unless the form is validated (see above).\n    if (continuebutton) {\n        continuebutton.dataset.blocked = true;\n        continuebutton.addEventListener('click', () => {\n            dynamicForm.submitFormAjax();\n        });\n    }\n}"],"names":["container","document","querySelector","SELECTOR","id","dataset","dynamicForm","DynamicForm","load","continuebutton","closest","addEventListener","events","FORM_SUBMITTED","e","response","detail","console","log","blocked","click","submitFormAjax"],"mappings":";;;;;kGAqCUA,UAAYC,SAASC,cAAcC,wBACnCC,GAAKJ,UAAUK,QAAQD,GAEvBE,YAAc,IAAIC,qBAAYP,UAAW,0DAGzCM,YAAYE,KAAK,CAACJ,GAAIA,SAExBK,eAAiBT,UAAUU,QAAQP,oBAAoBD,cAAcC,yBAEzEG,YAAYK,iBAAiBL,YAAYM,OAAOC,gBAAgBC,UACtDC,SAAWD,EAAEE,OAEfD,WAGAE,QAAQC,IAAI,WAAYH,UAInBN,iBACDA,eAAiBT,UAAUU,QAAQP,oBAAoBD,cAAcC,0BAErEM,iBACAA,eAAeJ,QAAQc,QAAU,QACjCV,eAAeW,aAU3Bd,YAAYK,iBAAiB,UALb,KAEZL,YAAYe,oBAQZZ,iBACAA,eAAeJ,QAAQc,SAAU,EACjCV,eAAeE,iBAAiB,SAAS,KACrCL,YAAYe,8FAzDlBlB,uBAEa,gCAFbA,mBAGS,cAHTA,wBAKc"}