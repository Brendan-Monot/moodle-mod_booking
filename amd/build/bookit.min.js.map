{"version":3,"file":"bookit.min.js","sources":["../src/bookit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/bookit\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nimport {reloadAllTables} from 'local_wunderbyte_table/reload';\n\nvar currentbookitpage = {};\nvar totalbookitpages = {};\n\nvar SELECTORS = {\n    MODALID: 'sbPrePageModal_',\n    INMODALDIV: ' div.pageContent',\n    CONTINUEBUTTON: 'a.continue-button', // Don't want to find button right now.\n    BACKBUTTON: 'a.back-button', // Don't want to find button right now.\n    BOOKITBUTTON: 'div.booking-button-area.noprice',\n    INMODALBUTTON: 'div.in-modal-button',\n    STATICBACKDROP: 'div.modal-backdrop',\n};\n\n/**\n * Initializes the bookit button for the normal bookit function.\n * @param {integer} itemid\n * @param {string} area\n */\nexport const initbookitbutton = (itemid, area) => {\n\n    const initselector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid]' +\n    '[data-area]';\n\n    if (!itemid || !area) {\n        const initbuttons = document.querySelectorAll(initselector);\n        initbuttons.forEach(button => {\n            const inititemid = button.dataset.itemid;\n            const initarea = button.dataset.area;\n            initbookitbutton(inititemid, initarea);\n        });\n        return;\n    }\n\n    const selector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid=\"' + itemid + '\"]' +\n    '[data-area=\"' + area + '\"]';\n\n    const buttons = document.querySelectorAll(selector);\n\n    if (!buttons) {\n        return;\n    }\n\n    // We support more than one booking button on the same page.\n    buttons.forEach(button => {\n\n        if (button.dataset.nojs) {\n            return;\n        }\n\n        if (!button.dataset.initialized) {\n            button.dataset.initialized = 'true';\n\n            const userid = button.dataset.userid;\n\n            button.addEventListener('click', () => {\n\n                // e.stopPropagation();\n\n                bookit(itemid, area, userid);\n            });\n        }\n    });\n};\n\n/**\n * Gets called from mustache template.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {integer} totalnumberofpages\n * @param {string} uniquid\n */\nexport const initprepagemodal = (optionid, userid, totalnumberofpages, uniquid) => {\n\n    // eslint-disable-next-line no-console\n    console.log('initprepagemodal', optionid, userid, totalnumberofpages, uniquid);\n\n    if (!optionid || !uniquid || !totalnumberofpages) {\n\n        const elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID);\n\n        elements.forEach(element => {\n            optionid = element.dataset.optionid;\n            uniquid = element.dataset.uniquid;\n            userid = element.dataset.userid;\n            totalnumberofpages = element.dataset.pages;\n            if (optionid && uniquid) {\n                initprepagemodal(optionid, userid, totalnumberofpages, uniquid);\n            }\n        });\n        return;\n    }\n\n    currentbookitpage[optionid] = 0;\n    totalbookitpages[optionid] = totalnumberofpages;\n\n    // We need to get all prepage modals on this site. Make sure they are initialized.\n\n    respondToVisibility(optionid, userid, uniquid, totalnumberofpages, loadPreBookingPage);\n};\n\n/**\n * React on visibility change.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {string} uniquid\n * @param {integer} totalnumberofpages\n * @param {function} callback\n */\nfunction respondToVisibility(optionid, userid, uniquid, totalnumberofpages, callback) {\n\n    // eslint-disable-next-line no-console\n    console.log('respondToVisibility', optionid, totalnumberofpages, uniquid);\n\n    let elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"]\");\n\n    // eslint-disable-next-line no-console\n    console.log('elements', \"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"]\", elements);\n\n    elements.forEach(element => {\n        if (!element || element.dataset.initialized == 'true') {\n            return;\n        }\n\n        element.dataset.initialized = true;\n\n        var observer = new MutationObserver(function() {\n            if (!isHidden(element)) {\n                // Todo: Make sure it's not triggered on close.\n                callback(optionid, userid, uniquid, totalnumberofpages);\n            }\n        });\n\n        // We look if we find a hidden parent. If not, we load right away.\n        while (element !== null) {\n            if (!isHidden(element)) {\n                element = element.parentElement;\n            } else {\n                if (element.dataset.observed) {\n                    return;\n                }\n\n                observer.observe(element, {attributes: true});\n                element.dataset.observed = true;\n                return;\n            }\n        }\n        callback(optionid, userid, uniquid, totalnumberofpages);\n    });\n}\n\n/**\n * Function to check visibility of element.\n * @param {*} el\n * @returns {boolean}\n */\nfunction isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n\n/**\n * Loads the (next) pre booking page.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {string} uniquid\n */\nexport const loadPreBookingPage = (\n    optionid, userid = 0, uniquid = '') => {\n\n    // eslint-disable-next-line no-console\n    console.log('loadPreBookingPage', optionid, uniquid, userid);\n\n    const element = returnVisibleElement(optionid, uniquid, SELECTORS.INMODALDIV);\n    if (element) {\n        while (element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n    } else {\n        // eslint-disable-next-line no-console\n        console.error('didnt find element');\n    }\n\n    Ajax.call([{\n        methodname: \"mod_booking_load_pre_booking_page\",\n        args: {\n            optionid,\n            userid,\n            'pagenumber': currentbookitpage[optionid],\n        },\n        done: function(res) {\n\n            // eslint-disable-next-line no-console\n            console.log(currentbookitpage[optionid], totalbookitpages[optionid]);\n\n            // If we are on the last page, we reset it to 0.\n            if (currentbookitpage[optionid] === totalbookitpages[optionid] - 1) {\n                currentbookitpage[optionid] = 0;\n            }\n\n            const jsonobject = JSON.parse(res.json);\n\n            // We support more than one template, they will be seperated by comma.\n            // We have a data key in the json\n            const templates = res.template.split(',');\n            let dataarray = jsonobject;\n            // Const buttontype = res.buttontype;\n\n            renderTemplatesOnPage(templates, dataarray, element);\n\n            // ShowRightButton(optionid, buttontype);\n\n            return true;\n        },\n        fail: function(err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }]);\n};\n\n/**\n *\n * @param {string} templates\n * @param {object} dataarray\n * @param {HTMLElement} element\n */\nasync function renderTemplatesOnPage(templates, dataarray, element) {\n\n    for (const template of templates) {\n\n        const data = dataarray.shift();\n\n        if (!data) {\n            return true;\n        }\n\n        await Templates.renderForPromise(template, data.data).then(({html, js}) => {\n\n            Templates.appendNodeContents(element, html, js);\n\n            return true;\n        }).catch(ex => {\n            Notification.addNotification({\n                message: 'failed rendering ' + ex,\n                type: \"danger\"\n            });\n        });\n    }\n    return true;\n}\n\n/**\n *\n * @param {int} itemid\n * @param {string} area\n * @param {int} userid\n */\nfunction bookit(itemid, area, userid) {\n\n    Ajax.call([{\n        methodname: \"mod_booking_bookit\",\n        args: {\n            'itemid': itemid,\n            'area': area,\n            'userid': userid,\n        },\n        done: function(res) {\n\n            const jsonarray = JSON.parse(res.json);\n\n            // We might have more than one template to render.\n            const templates = res.template.split(',');\n\n            // There might be more than one button area.\n            const buttons = document.querySelectorAll(SELECTORS.BOOKITBUTTON +\n                '[data-itemid=\\'' + itemid + '\\']' +\n                '[data-area=\\'' + area + '\\']');\n\n            const promises = [];\n\n            // eslint-disable-next-line no-console\n            console.log(buttons);\n\n            // We run through every button. and render the data.\n            buttons.forEach(button => {\n\n                // For every button, we need a new jsonarray.\n                const arraytoreduce = [...jsonarray];\n\n                templates.forEach(template => {\n                    const data = arraytoreduce.shift();\n\n                    // We need to check if this will render the prepagemodal again.\n                    // We never render the prepage modal in the in modal button.\n                    if (!(template === 'mod_booking/bookingpage/prepagemodal'\n                            && button.parentElement.classList.contains('in-modal-button'))) {\n\n                        const datatorender = data.data ?? data;\n\n                        const promise = Templates.renderForPromise(template, datatorender).then(({html, js}) => {\n\n                            Templates.replaceNode(button, html, js);\n\n                            return true;\n                        }).catch(ex => {\n                            Notification.addNotification({\n                                message: 'failed rendering ' + ex,\n                                type: \"danger\"\n                            });\n                        });\n\n                        promises.push(promise);\n                    }\n                });\n            });\n\n            Promise.all(promises).then(() => {\n\n                const backdrop = document.querySelector(SELECTORS.STATICBACKDROP);\n\n                if (!backdrop) {\n                    reloadAllTables();\n                }\n\n                // The actions on successful booking are executed elsewhere.\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n        }\n    }]);\n}\n\n/**\n * We want to find out the visible modal\n * @param {integer} optionid\n * @param {string} uniquid\n * @param {string} appendedSelector\n * @returns {HTMLElement}\n */\nfunction returnVisibleElement(optionid, uniquid, appendedSelector) {\n\n    // First, we get all the possbile Elements (we don't now the unique id appended to the element.)\n    let selector = \"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"] \" + appendedSelector;\n    if (!uniquid || uniquid.length === 0) {\n        selector = \"[id^=\" + SELECTORS.MODALID + optionid + \"].show \" + appendedSelector;\n    }\n\n    const elements = document.querySelectorAll(selector);\n\n    let visibleElement = null;\n\n    elements.forEach(element => {\n\n        // eslint-disable-next-line no-console\n        console.log('visibleElement', selector, element);\n\n        visibleElement = element;\n    });\n\n    return visibleElement;\n}\n\n/**\n * Load next prepage booking page.\n * @param {int} optionid\n * @param {int} userid\n */\nexport function continueToNextPage(optionid, userid) {\n\n    currentbookitpage[optionid]++;\n\n    loadPreBookingPage(optionid, userid);\n}\n\n/**\n *  Load previous prepage booking page.\n * @param {int} optionid\n * @param {int} userid\n */\nexport function backToPreviousPage(optionid, userid) {\n\n    currentbookitpage[optionid]--;\n\n    loadPreBookingPage(optionid, userid);\n}"],"names":["optionid","userid","currentbookitpage","loadPreBookingPage","totalbookitpages","SELECTORS","initbookitbutton","itemid","area","initselector","document","querySelectorAll","forEach","button","inititemid","dataset","initarea","selector","buttons","nojs","initialized","addEventListener","call","methodname","args","done","res","jsonarray","JSON","parse","json","templates","template","split","promises","console","log","arraytoreduce","data","shift","parentElement","classList","contains","datatorender","promise","Templates","renderForPromise","then","_ref2","html","js","replaceNode","catch","ex","addNotification","message","type","push","Promise","all","querySelector","e","bookit","initprepagemodal","totalnumberofpages","uniquid","callback","elements","element","observer","MutationObserver","isHidden","observed","observe","attributes","respondToVisibility","pages","el","style","window","getComputedStyle","display","visibility","returnVisibleElement","firstChild","removeChild","error","jsonobject","renderTemplatesOnPage","fail","err","dataarray","_ref","appendNodeContents","appendedSelector","length","visibleElement"],"mappings":"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"}