{"version":3,"file":"bookit.min.js","sources":["../src/bookit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/bookit\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nimport {reloadAllTables} from 'local_wunderbyte_table/reload';\n\nvar currentbookitpage = {};\nvar totalbookitpages = {};\n\nvar SELECTORS = {\n    MODALID: 'sbPrePageModal_',\n    INLINEID: 'sbPrePageInline_',\n    INMODALDIV: ' div.modalMainContent',\n    MODALHEADER: 'div.modalHeader',\n    MODALBUTTONAREA: 'div.modalButtonArea',\n    MODALFOOTER: 'div.modalFooter',\n    CONTINUEBUTTON: 'a.continue-button', // Don't want to find button right now.\n    BACKBUTTON: 'a.back-button', // Don't want to find button right now.\n    BOOKITBUTTON: 'div.booking-button-area.noprice',\n    INMODALBUTTON: 'div.in-modal-button',\n    STATICBACKDROP: 'div.modal-backdrop',\n};\n\n/**\n * Initializes the bookit button for the normal bookit function.\n * @param {integer} itemid\n * @param {string} area\n */\nexport const initbookitbutton = (itemid, area) => {\n\n    const initselector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid]' +\n    '[data-area]';\n\n    if (!itemid || !area) {\n        const initbuttons = document.querySelectorAll(initselector);\n        initbuttons.forEach(button => {\n            const inititemid = button.dataset.itemid;\n            const initarea = button.dataset.area;\n            initbookitbutton(inititemid, initarea);\n        });\n        return;\n    }\n\n    const selector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid=\"' + itemid + '\"]' +\n    '[data-area=\"' + area + '\"]';\n\n    const buttons = document.querySelectorAll(selector);\n\n    if (!buttons) {\n        return;\n    }\n\n    // We support more than one booking button on the same page.\n    buttons.forEach(button => {\n\n        if (button.dataset.nojs) {\n            return;\n        }\n\n        // We don't run code on disabled buttons.\n        if (button.classList.contains('disabled')) {\n            return;\n        }\n\n        if (!button.dataset.initialized) {\n            button.dataset.initialized = 'true';\n\n            const userid = button.dataset.userid;\n\n            button.addEventListener('click', (e) => {\n\n                // E.stopPropagation();\n\n                const data = button.dataset;\n\n                if (e.target.classList.contains('btn')) {\n                    bookit(itemid, area, userid, data);\n                }\n            });\n        }\n    });\n};\n\n/**\n * Gets called from mustache template.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {integer} totalnumberofpages\n * @param {string} uniquid\n */\nexport const initprepagemodal = (optionid, userid, totalnumberofpages, uniquid) => {\n\n    // eslint-disable-next-line no-console\n    console.log('initprepagemodal', optionid, userid, totalnumberofpages, uniquid);\n\n    if (!optionid || !uniquid || !totalnumberofpages) {\n\n        const elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID);\n\n        elements.forEach(element => {\n            optionid = element.dataset.optionid;\n            uniquid = element.dataset.uniquid;\n            userid = element.dataset.userid;\n            totalnumberofpages = element.dataset.pages;\n            if (optionid && uniquid) {\n                initprepagemodal(optionid, userid, totalnumberofpages, uniquid);\n            }\n        });\n        return;\n    }\n\n    currentbookitpage[optionid] = 0;\n    totalbookitpages[optionid] = totalnumberofpages;\n\n    // We need to get all prepage modals on this site. Make sure they are initialized.\n\n    respondToVisibility(optionid, userid, uniquid, totalnumberofpages, loadPreBookingPage);\n};\n\n/**\n * Gets called from mustache template.\n * @param {integer} itemid (optionid)\n * @param {integer} userid\n * @param {integer} totalnumberofpages\n * @param {string} uniquid\n * @param {string} area\n */\nexport const initprepageinline = (itemid, userid, totalnumberofpages, uniquid, area) => {\n\n    const initselector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid]' +\n    '[data-area]';\n\n    if (!itemid || !area) {\n        const initbuttons = document.querySelectorAll(initselector);\n        initbuttons.forEach(button => {\n            const inititemid = button.dataset.itemid;\n            const initarea = button.dataset.area;\n            initbookitbutton(inititemid, initarea);\n        });\n        return;\n    }\n\n    const selector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid=\"' + itemid + '\"]' +\n    '[data-area=\"' + area + '\"]';\n\n    const buttons = document.querySelectorAll(selector);\n\n    if (!buttons) {\n        return;\n    }\n\n    // We support more than one booking button on the same page.\n    buttons.forEach(button => {\n\n        // We don't run code on disabled buttons.\n        if (button.classList.contains('disabled')) {\n            return;\n        }\n\n        if (!button.dataset.initialized) {\n            button.dataset.initialized = 'true';\n\n            const userid = button.dataset.userid;\n\n            button.addEventListener('click', (e) => {\n\n                // E.stopPropagation();\n\n                const data = button.dataset;\n\n                if (e.target.classList.contains('btn')) {\n                    bookit(itemid, area, userid, data);\n                }\n            });\n        }\n    });\n\n    loadPreBookingPage(itemid, userid, uniquid);\n};\n\n/**\n * React on visibility change.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {string} uniquid\n * @param {integer} totalnumberofpages\n * @param {function} callback\n */\nfunction respondToVisibility(optionid, userid, uniquid, totalnumberofpages, callback) {\n\n    // eslint-disable-next-line no-console\n    console.log('respondToVisibility', optionid, totalnumberofpages, uniquid, userid);\n\n    let elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"]\");\n\n    // eslint-disable-next-line no-console\n    console.log('elements', \"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"]\", elements);\n\n    elements.forEach(element => {\n        if (!element || element.dataset.initialized == 'true') {\n            return;\n        }\n\n        element.dataset.initialized = true;\n\n        var observer = new MutationObserver(function() {\n            if (!isHidden(element)) {\n                // Todo: Make sure it's not triggered on close.\n                callback(optionid, userid, uniquid, totalnumberofpages);\n            }\n        });\n\n        // We look if we find a hidden parent. If not, we load right away.\n        while (element !== null) {\n            if (!isHidden(element)) {\n                element = element.parentElement;\n            } else {\n                if (element.dataset.observed) {\n                    return;\n                }\n\n                observer.observe(element, {attributes: true});\n                element.dataset.observed = true;\n                return;\n            }\n        }\n        callback(optionid, userid, uniquid, totalnumberofpages);\n    });\n}\n\n/**\n * Function to check visibility of element.\n * @param {*} el\n * @returns {boolean}\n */\nfunction isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n\n/**\n * Loads the (next) pre booking page.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {string} uniquid\n */\nexport const loadPreBookingPage = (\n    optionid, userid = 0, uniquid = '') => {\n\n    // eslint-disable-next-line no-console\n    console.log('loadPreBookingPage', optionid, uniquid, userid);\n\n    const element = returnVisibleElement(optionid, uniquid, SELECTORS.INMODALDIV);\n    if (element) {\n        while (element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n    } else {\n        // eslint-disable-next-line no-console\n        console.error('didnt find element');\n    }\n\n    Ajax.call([{\n        methodname: \"mod_booking_load_pre_booking_page\",\n        args: {\n            optionid,\n            userid,\n            'pagenumber': currentbookitpage[optionid],\n        },\n        done: function(res) {\n\n            // eslint-disable-next-line no-console\n            console.log(currentbookitpage[optionid], totalbookitpages[optionid]);\n\n            // If we are on the last page, we reset it to 0.\n            if (currentbookitpage[optionid] === totalbookitpages[optionid] - 1) {\n                currentbookitpage[optionid] = 0;\n            }\n\n            const jsonobject = JSON.parse(res.json);\n\n            // We support more than one template, they will be seperated by comma.\n            // We have a data key in the json\n            const templates = res.template.split(',');\n            let dataarray = jsonobject;\n            // Const buttontype = res.buttontype;\n\n            renderTemplatesOnPage(templates, dataarray, element);\n\n            // ShowRightButton(optionid, buttontype);\n\n            return true;\n        },\n        fail: function(err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }]);\n};\n\n/**\n *\n * @param {string} templates\n * @param {object} dataarray\n * @param {HTMLElement} element\n */\nasync function renderTemplatesOnPage(templates, dataarray, element) {\n\n    // eslint-disable-next-line no-console\n    console.log('templates: ', templates);\n\n    const modal = element.closest('.modal-body');\n\n    modal.querySelector(SELECTORS.MODALHEADER).innerHTML = '';\n    modal.querySelector(SELECTORS.INMODALDIV).innerHTML = '';\n    modal.querySelector(SELECTORS.MODALBUTTONAREA).innerHTML = '';\n    modal.querySelector(SELECTORS.MODALFOOTER).innerHTML = '';\n\n    templates.forEach(async template => {\n\n        const data = dataarray.shift();\n\n        // eslint-disable-next-line no-console\n        console.log('data: ', data);\n\n        let targetelement = element;\n\n        if (!data) {\n            return true;\n        }\n\n        switch (template) {\n            case 'mod_booking/bookingpage/header':\n                targetelement = modal.querySelector(SELECTORS.MODALHEADER);\n                break;\n            case 'mod_booking/bookit_button':\n            case 'mod_booking/bookit_price':\n                targetelement = modal.querySelector(SELECTORS.MODALBUTTONAREA);\n                break;\n            case 'mod_booking/bookingpage/footer':\n                targetelement = modal.querySelector(SELECTORS.MODALFOOTER);\n                break;\n            default:\n                targetelement = modal.querySelector(SELECTORS.INMODALDIV);\n                break;\n        }\n\n        // eslint-disable-next-line no-console\n        console.log('data.data: ', template, data.data);\n\n        await Templates.renderForPromise(template, data.data).then(({html, js}) => {\n\n            // eslint-disable-next-line no-console\n            console.log('targetelement: ', targetelement);\n\n            Templates.replaceNodeContents(targetelement, html, js);\n\n            return true;\n        }).catch(ex => {\n            Notification.addNotification({\n                message: 'failed rendering ' + JSON.stringify(ex),\n                type: \"danger\"\n            });\n        });\n        return true;\n    });\n    return true;\n}\n\n/**\n *\n * @param {int} itemid\n * @param {string} area\n * @param {int} userid\n * @param {object} data\n */\nfunction bookit(itemid, area, userid, data) {\n\n    Ajax.call([{\n        methodname: \"mod_booking_bookit\",\n        args: {\n            'itemid': itemid,\n            'area': area,\n            'userid': userid,\n            'data': JSON.stringify(data),\n        },\n        done: function(res) {\n\n            if (document.querySelector('.booking-elective-component')) {\n                window.location.reload();\n            }\n\n            const jsonarray = JSON.parse(res.json);\n\n            // We might have more than one template to render.\n            const templates = res.template.split(',');\n\n            // There might be more than one button area.\n            const buttons = document.querySelectorAll(SELECTORS.BOOKITBUTTON +\n                '[data-itemid=\\'' + itemid + '\\']' +\n                '[data-area=\\'' + area + '\\']');\n\n            const promises = [];\n\n            // eslint-disable-next-line no-console\n            console.log('buttons:', buttons);\n\n            // We run through every button. and render the data.\n            buttons.forEach(button => {\n\n                // For every button, we need a new jsonarray.\n                const arraytoreduce = [...jsonarray];\n\n                templates.forEach(template => {\n\n                    const data = arraytoreduce.shift();\n\n                    // eslint-disable-next-line no-console\n                    console.log('data (arraytoreduce): ', data);\n\n                    const datatorender = data.data ?? data;\n\n                    const promise = Templates.renderForPromise(template, datatorender).then(({html, js}) => {\n\n                        Templates.replaceNode(button, html, js);\n\n                        return true;\n                    }).catch(ex => {\n                        Notification.addNotification({\n                            message: 'failed rendering ' + ex,\n                            type: \"danger\"\n                        });\n                    });\n\n                    promises.push(promise);\n                });\n            });\n\n            Promise.all(promises).then(() => {\n\n                const backdrop = document.querySelector(SELECTORS.STATICBACKDROP);\n\n                if (!backdrop) {\n                    reloadAllTables();\n                }\n\n                // The actions on successful booking are executed elsewhere.\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n        }\n    }]);\n}\n\n/**\n * We want to find out the visible modal\n * @param {integer} optionid\n * @param {string} uniquid\n * @param {string} appendedSelector\n * @returns {HTMLElement}\n */\nfunction returnVisibleElement(optionid, uniquid, appendedSelector) {\n\n    // First, we get all the possbile Elements (we don't now the unique id appended to the element.)\n    let selector = \"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"] \" + appendedSelector;\n    if (!uniquid || uniquid.length === 0) {\n        selector = \"[id^=\" + SELECTORS.MODALID + optionid + \"].show \" + appendedSelector;\n    }\n\n    const elements = document.querySelectorAll(selector);\n\n    let visibleElement = null;\n\n    elements.forEach(element => {\n\n        // eslint-disable-next-line no-console\n        console.log('visibleElement', selector, element);\n\n        visibleElement = element;\n    });\n\n    return visibleElement;\n}\n\n/**\n * Load next prepage booking page.\n * @param {int} optionid\n * @param {int} userid\n */\nexport function continueToNextPage(optionid, userid) {\n    if (currentbookitpage[optionid] < totalbookitpages[optionid]) {\n        currentbookitpage[optionid]++;\n        loadPreBookingPage(optionid, userid);\n    }\n}\n\n/**\n *  Load previous prepage booking page.\n * @param {int} optionid\n * @param {int} userid\n */\nexport function backToPreviousPage(optionid, userid) {\n\n    currentbookitpage[optionid]--;\n\n    loadPreBookingPage(optionid, userid);\n}\n\n/**\n *  Set back variables used in modal.\n *  @param {int} optionid\n */\nexport function setBackModalVariables(optionid) {\n    // eslint-disable-next-line no-console\n    console.log('setBackModalVariables - optionid: ' + optionid + ' currentbookitpage[optionid]: ' + currentbookitpage[optionid]);\n    currentbookitpage[optionid] = 0;\n}"],"names":["optionid","userid","currentbookitpage","loadPreBookingPage","totalbookitpages","console","log","SELECTORS","initbookitbutton","itemid","area","initselector","document","querySelectorAll","forEach","button","inititemid","dataset","initarea","selector","buttons","nojs","classList","contains","initialized","addEventListener","e","data","target","bookit","initprepagemodal","totalnumberofpages","uniquid","callback","elements","element","observer","MutationObserver","isHidden","observed","observe","attributes","parentElement","respondToVisibility","pages","el","style","window","getComputedStyle","display","visibility","returnVisibleElement","firstChild","removeChild","error","call","methodname","args","done","res","jsonobject","JSON","parse","json","renderTemplatesOnPage","template","split","fail","err","templates","dataarray","modal","closest","querySelector","innerHTML","async","shift","targetelement","Templates","renderForPromise","then","_ref","html","js","replaceNodeContents","catch","ex","addNotification","message","stringify","type","location","reload","jsonarray","promises","arraytoreduce","datatorender","promise","_ref2","replaceNode","push","Promise","all","appendedSelector","length","visibleElement"],"mappings":"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"}