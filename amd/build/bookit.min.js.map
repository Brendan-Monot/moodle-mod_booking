{"version":3,"file":"bookit.min.js","sources":["../src/bookit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/bookit\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nimport {closeModal, closeInline} from 'mod_booking/bookingpage/prepageFooter';\nimport {bookit} from './bookit.1';\n\nvar currentbookitpage = {};\nvar totalbookitpages = {};\n\nexport var SELECTORS = {\n    MODALID: 'sbPrePageModal_',\n    INLINEID: 'sbPrePageInline_',\n    INMODALDIV: ' div.modalMainContent',\n    MODALHEADER: 'div.modalHeader',\n    MODALBUTTONAREA: 'div.modalButtonArea',\n    MODALFOOTER: 'div.modalFooter',\n    CONTINUEBUTTON: 'a.continue-button', // Don't want to find button right now.\n    BACKBUTTON: 'a.back-button', // Don't want to find button right now.\n    BOOKITBUTTON: 'div.booking-button-area.noprice',\n    INMODALBUTTON: 'div.in-modal-button',\n    STATICBACKDROP: 'div.modal-backdrop',\n};\n\n/**\n * Initializes the bookit button for the normal bookit function.\n * @param {integer} itemid\n * @param {string} area\n */\nexport const initbookitbutton = (itemid, area) => {\n\n    const initselector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid]' +\n    '[data-area]';\n\n    if (!itemid || !area) {\n        const initbuttons = document.querySelectorAll(initselector);\n        initbuttons.forEach(button => {\n            const inititemid = button.dataset.itemid;\n            const initarea = button.dataset.area;\n            initbookitbutton(inititemid, initarea);\n        });\n        return;\n    }\n\n    const selector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid=\"' + itemid + '\"]' +\n    '[data-area=\"' + area + '\"]';\n\n    const buttons = document.querySelectorAll(selector);\n\n    if (!buttons) {\n        return;\n    }\n\n    // We support more than one booking button on the same page.\n    buttons.forEach(button => {\n\n        if (button.dataset.nojs) {\n            return;\n        }\n\n        // We don't run code on disabled buttons.\n        if (button.classList.contains('disabled')) {\n            return;\n        }\n\n        if (!button.dataset.initialized) {\n            button.dataset.initialized = 'true';\n\n            const userid = button.dataset.userid;\n\n            button.addEventListener('click', (e) => {\n\n                // E.stopPropagation();\n\n                const data = button.dataset;\n\n                if (e.target.classList.contains('shopping-cart-cancel-button')) {\n\n                    import('local_shopping_cart/shistory')\n                    // eslint-disable-next-line promise/always-return\n                    .then(shoppingcart => {\n                        const confirmCancelModal = shoppingcart.confirmCancelModal;\n                        // Now you can use the specific function\n                        confirmCancelModal(button, 0);\n                    })\n                    .catch(err => {\n                        // Handle any errors, including if the module doesn't exist\n                        // eslint-disable-next-line no-console\n                        console.log(err);\n                    });\n\n\n                } else if (e.target.classList.contains('btn')) {\n                    bookit(itemid, area, userid, data);\n                }\n            });\n        }\n    });\n};\n\n/**\n * Gets called from mustache template.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {integer} totalnumberofpages\n * @param {string} uniquid\n */\nexport const initprepagemodal = (optionid, userid, totalnumberofpages, uniquid) => {\n\n    // eslint-disable-next-line no-console\n    console.log('initprepagemodal', optionid, userid, totalnumberofpages, uniquid);\n\n    if (!optionid || !uniquid || !totalnumberofpages) {\n\n        const elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID);\n\n        elements.forEach(element => {\n\n            optionid = element.dataset.optionid;\n            uniquid = element.dataset.uniquid;\n            userid = element.dataset.userid;\n            totalnumberofpages = element.dataset.pages;\n            if (optionid && uniquid) {\n                initprepagemodal(optionid, userid, totalnumberofpages, uniquid);\n            }\n        });\n        return;\n    }\n\n    currentbookitpage[optionid] = 0;\n    totalbookitpages[optionid] = totalnumberofpages;\n\n    // We need to get all prepage modals on this site. Make sure they are initialized.\n    respondToVisibility(optionid, userid, uniquid, totalnumberofpages, loadPreBookingPage);\n};\n\n/**\n * Gets called from mustache template.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {integer} totalnumberofpages\n * @param {string} uniquid\n */\nexport const initprepageinline = (optionid, userid, totalnumberofpages, uniquid) => {\n\n    // eslint-disable-next-line no-console\n    console.log('initprepageinline', optionid, userid, totalnumberofpages, uniquid);\n\n    if (!optionid || !uniquid || !totalnumberofpages) {\n\n        const elements = document.querySelectorAll(\"[id^=\" + SELECTORS.INLINEID);\n\n        // eslint-disable-next-line no-console\n        console.log(elements);\n\n        elements.forEach(element => {\n            optionid = element.dataset.optionid;\n            uniquid = element.dataset.uniquid;\n            userid = element.dataset.userid;\n            totalnumberofpages = element.dataset.pages;\n            if (optionid && uniquid) {\n                initprepageinline(optionid, userid, totalnumberofpages, uniquid);\n            }\n        });\n        return;\n    }\n\n    currentbookitpage[optionid] = 0;\n    totalbookitpages[optionid] = totalnumberofpages;\n\n    // Retrieve the right button.\n    const buttons = document.querySelectorAll(\n        '[data-itemid=\"' + optionid + '\"]' +\n        '[data-area=\"option\"]'\n    );\n\n    // Add the click listener to the button.\n\n    buttons.forEach(button => {\n\n        if (button.dataset.initialized) {\n            return;\n        }\n\n        button.dataset.initialized = true;\n\n        // eslint-disable-next-line no-console\n        console.log('add listener to button', button, button.dataset.action);\n\n        button.addEventListener('click', e => {\n\n            // Get the row element.\n            let rowcontainer = e.target.closest('.row');\n\n            const transferarea = !rowcontainer.lastElementChild.classList.contains('inlineprepagearea');\n            // We move the inlineprepagearea only if we need to.\n            if (transferarea) {\n                let inlinediv = returnVisibleElement(optionid, uniquid, SELECTORS.INMODALDIV);\n\n                rowcontainer.append(inlinediv.closest('.inlineprepagearea'));\n                // Inlinediv.remove();\n\n                // We need to get all prepage modals on this site. Make sure they are initialized.\n                loadPreBookingPage(optionid, userid, uniquid);\n            }\n        });\n    });\n};\n\n/**\n * React on visibility change.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {string} uniquid\n * @param {integer} totalnumberofpages\n * @param {function} callback\n */\nfunction respondToVisibility(optionid, userid, uniquid, totalnumberofpages, callback) {\n\n    let elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"]\");\n\n    elements.forEach(element => {\n\n        if (!element || element.dataset.initialized == 'true') {\n            return;\n        }\n\n        element.dataset.initialized = true;\n\n        var observer = new MutationObserver(function() {\n\n            if (!isHidden(element)) {\n\n                // Because of the modal animation, \"isHIdden\" is also true on hiding modal.\n                if (element.classList.contains('show')) {\n\n                    // Todo: Make sure it's not triggered on close.\n                    callback(optionid, userid, uniquid, totalnumberofpages);\n                }\n            }\n        });\n\n        // We look if we find a hidden parent. If not, we load right away.\n        while (element !== null) {\n            if (!isHidden(element)) {\n                element = element.parentElement;\n            } else {\n                if (element.dataset.observed) {\n                    return;\n                }\n\n                observer.observe(element, {attributes: true});\n                element.dataset.observed = true;\n                return;\n            }\n        }\n        callback(optionid, userid, uniquid, totalnumberofpages);\n    });\n}\n\n/**\n * Function to check visibility of element.\n * @param {*} el\n * @returns {boolean}\n */\nfunction isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n\n/**\n * Loads the (next) pre booking page.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {string} uniquid\n */\nexport const loadPreBookingPage = (\n    optionid, userid = 0, uniquid = '') => {\n\n    const element = returnVisibleElement(optionid, uniquid, SELECTORS.INMODALDIV);\n\n    if (element) {\n        while (element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n    } else {\n        // eslint-disable-next-line no-console\n        console.error('didnt find element');\n    }\n\n    Ajax.call([{\n        methodname: \"mod_booking_allow_add_item_to_cart\",\n        args: {\n            'itemid': optionid,\n            'userid': userid,\n        },\n        done: function(response) {\n            // Will always be 1, if shopping cart is not installed!\n            if (response.success == 1) {\n                Ajax.call([{\n                    methodname: \"mod_booking_load_pre_booking_page\",\n                    args: {\n                        optionid,\n                        userid,\n                        'pagenumber': currentbookitpage[optionid],\n                    },\n                    done: function(res) {\n                        // If we are on the last page, we reset it to 0.\n                        if (currentbookitpage[optionid] === totalbookitpages[optionid] - 1) {\n                            currentbookitpage[optionid] = 0;\n                        }\n\n                        const jsonobject = JSON.parse(res.json);\n\n                        // We support more than one template, they will be seperated by comma.\n                        // We have a data key in the json\n                        const templates = res.template.split(',');\n                        let dataarray = jsonobject;\n                        // Const buttontype = res.buttontype;\n\n                        renderTemplatesOnPage(templates, dataarray, element);\n                    },\n                    fail: function(err) {\n                        // eslint-disable-next-line no-console\n                        console.log(err);\n                    }\n                }]);\n            } else {\n\n                closeModal(optionid, false);\n                closeInline(optionid, false);\n\n                // Make sure that the prepage modal is actually closed.\n\n                import('local_shopping_cart/cart')\n                    // eslint-disable-next-line promise/always-return\n                    .then(shoppingcart => {\n                        const addItemShowNotification = shoppingcart.addItemShowNotification;\n                        // Now you can use the specific function\n                        response.userid = userid;\n                        addItemShowNotification(response);\n                    })\n                    .catch(err => {\n                        // Handle any errors, including if the module doesn't exist\n                        // eslint-disable-next-line no-console\n                        console.log(err);\n                });\n            }\n\n            return true;\n        },\n        fail: function(err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }]);\n};\n\n/**\n *\n * @param {string} templates\n * @param {object} dataarray\n * @param {HTMLElement} element\n */\nasync function renderTemplatesOnPage(templates, dataarray, element) {\n\n    const modal = element.closest('.prepage-body');\n\n    // We need to pass the id of our element to the templates to render.\n    // If not, we might select the wrong modal or collapsible.\n    let elementid = modal.id;\n\n    if (!elementid) {\n        const parent = modal.closest('[id]');\n        elementid = parent.id;\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(modal, elementid);\n\n    modal.querySelector(SELECTORS.MODALHEADER).innerHTML = '';\n    modal.querySelector(SELECTORS.INMODALDIV).innerHTML = '';\n    modal.querySelector(SELECTORS.MODALBUTTONAREA).innerHTML = '';\n    modal.querySelector(SELECTORS.MODALFOOTER).innerHTML = '';\n\n    templates.forEach(async template => {\n\n        const data = dataarray.shift();\n\n        let targetelement = element;\n\n        if (!data) {\n            return true;\n        }\n\n        data.data.elementid = elementid;\n\n        switch (template) {\n            case 'mod_booking/bookingpage/header':\n                targetelement = modal.querySelector(SELECTORS.MODALHEADER);\n                break;\n            case 'mod_booking/bookit_button':\n            case 'mod_booking/bookit_price':\n                targetelement = modal.querySelector(SELECTORS.MODALBUTTONAREA);\n                break;\n            case 'mod_booking/bookingpage/footer':\n                targetelement = modal.querySelector(SELECTORS.MODALFOOTER);\n                break;\n            default:\n                targetelement = modal.querySelector(SELECTORS.INMODALDIV);\n                break;\n        }\n\n        // eslint-disable-next-line no-console\n        console.log(data.data);\n\n        await Templates.renderForPromise(template, data.data).then(({html, js}) => {\n\n            Templates.replaceNodeContents(targetelement, html, js);\n\n            return true;\n        }).catch(ex => {\n            Notification.addNotification({\n                message: 'failed rendering ' + JSON.stringify(ex),\n                type: \"danger\"\n            });\n        });\n        return true;\n    });\n    return true;\n}\n\n/**\n * We want to find out the visible modal\n * @param {integer} optionid\n * @param {string} uniquid\n * @param {string} appendedSelector\n * @returns {HTMLElement}\n */\nfunction returnVisibleElement(optionid, uniquid, appendedSelector) {\n\n    // First, we get all the possbile Elements (we don't now the unique id appended to the element.)\n    let selector = '[id^=\"' + SELECTORS.MODALID + optionid + '_' + uniquid + '\"] ' + appendedSelector;\n    if (!uniquid || uniquid.length === 0) {\n        selector = '[id^=\"' + SELECTORS.MODALID + optionid + '_\"].show ' + appendedSelector;\n    }\n\n    let elements = document.querySelectorAll(selector);\n\n    // If the nodelist is empty, we we mgiht use inline.\n    // If so, we need to have a different way of selecting elements.\n    if (elements.length === 0) {\n\n        selector = '[id^=\"' + SELECTORS.INLINEID + optionid + '_\"] ' + appendedSelector;\n        elements = document.querySelectorAll(selector);\n\n    }\n\n    let visibleElement = null;\n\n    elements.forEach(element => {\n\n        var elementtocheck = element.parentElement.parentElement;\n\n        // We look if we find a hidden parent. If not, we load right away.\n        while (elementtocheck !== null) {\n            if (!isHidden(elementtocheck)) {\n                elementtocheck = elementtocheck.parentElement;\n\n            } else {\n\n                break;\n            }\n        }\n        // If after the while, we have still an element, it's hidden.\n        // So we only apply visible if it's null.\n        if (!elementtocheck) {\n            visibleElement = element;\n        }\n    });\n\n    return visibleElement;\n}\n\n/**\n * Load next prepage booking page.\n * @param {int} optionid\n * @param {int} userid\n */\nexport function continueToNextPage(optionid, userid) {\n    if (currentbookitpage[optionid] < totalbookitpages[optionid]) {\n        currentbookitpage[optionid]++;\n        loadPreBookingPage(optionid, userid);\n    }\n}\n\n/**\n *  Load previous prepage booking page.\n * @param {int} optionid\n * @param {int} userid\n */\nexport function backToPreviousPage(optionid, userid) {\n\n    currentbookitpage[optionid]--;\n\n    loadPreBookingPage(optionid, userid);\n}\n\n/**\n *  Set back variables used in modal.\n *  @param {int} optionid\n */\nexport function setBackModalVariables(optionid) {\n\n    currentbookitpage[optionid] = 0;\n}\n"],"names":["optionid","userid","currentbookitpage","loadPreBookingPage","totalbookitpages","_ajax","_interopRequireDefault","_templates","_notification","_systemImportTransformerGlobalIdentifier","window","self","global","obj","__esModule","default","SELECTORS","MODALID","INLINEID","INMODALDIV","MODALHEADER","MODALBUTTONAREA","MODALFOOTER","CONTINUEBUTTON","BACKBUTTON","BOOKITBUTTON","INMODALBUTTON","STATICBACKDROP","_exports","initbookitbutton","itemid","area","initselector","document","querySelectorAll","forEach","button","inititemid","dataset","initarea","selector","buttons","nojs","classList","contains","initialized","addEventListener","e","data","target","define","amd","Promise","resolve","reject","require","module","exports","component","loader","then","shoppingcart","confirmCancelModal","catch","err","console","log","bookit","initprepagemodal","totalnumberofpages","uniquid","callback","elements","element","observer","MutationObserver","isHidden","observed","observe","attributes","parentElement","respondToVisibility","pages","initprepageinline","action","rowcontainer","closest","lastElementChild","inlinediv","returnVisibleElement","append","el","style","getComputedStyle","display","visibility","arguments","length","undefined","firstChild","removeChild","error","Ajax","call","methodname","args","done","response","success","pagenumber","res","jsonobject","JSON","parse","json","async","templates","dataarray","modal","elementid","id","parent","querySelector","innerHTML","shift","targetelement","template","Templates","renderForPromise","_ref","html","js","replaceNodeContents","ex","Notification","addNotification","message","stringify","type","renderTemplatesOnPage","split","fail","closeModal","closeInline","addItemShowNotification","appendedSelector","visibleElement","elementtocheck"],"mappings":"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"}